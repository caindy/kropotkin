#!/usr/bin/python
# Copyright Douglas Squirrel 2011
# This program comes with ABSOLUTELY NO WARRANTY. 
# It is free software, and you are welcome to redistribute it under certain conditions; see the GPLv3 license in the file LICENSE for details.

import glob, messageboard, os.path, sys, subprocess, time

def basename_without_extension(file_path):
    return os.path.splitext(os.path.basename(file_path))[0]

def start_directly(file_path):
    messageboard.post("process_start_direct", file_path)
    with open(file_path, "r") as f:
        code = f.read()
    p = subprocess.Popen(args="python", stdin=subprocess.PIPE)
    p.stdin.write(code)
    p.stdin.close()

def start(file_path):
    verb = basename_without_extension(file_path)
    test_file_path = file_path.replace(".py", "_test.py")
    with open(file_path, "r") as f:
        code = f.read()
    with open(test_file_path, "r") as f:
        test_code = f.read()
    messageboard.post("start_process", str({'verb':verb, 'code':code, 'test_code':test_code}))

def non_test_python_files(directory):
    return [f for f in glob.glob(os.path.join(directory, "*.py")) if not f.endswith("_test.py")]

def start_component_directly(directory):
    for file_path in non_test_python_files(directory):
        start_directly(file_path)

def start_component(directory):
    for file_path in non_test_python_files(directory):
        start(file_path)
      
direct_start_path = os.path.join(os.getcwd(), "direct_start")
core_path = os.path.join(os.getcwd(), "core")
app_directory_path = sys.argv[1] if len(sys.argv) >= 2 else os.path.expanduser("~/kropotkin-app")

start_component_directly(direct_start_path)
time.sleep(1)
start_component(core_path)
start_component(app_directory_path)

messageboard.post("bootstrap_finished", "")
while 1:
    pass
